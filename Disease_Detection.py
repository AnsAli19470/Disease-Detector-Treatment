# -*- coding: utf-8 -*-
"""Diseas_prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15_0m4rBHp8fmBYY9FNtUyGxQfm9eNwn7
"""

import pandas as pd
import numpy as np

df=pd.read_csv('Training.csv')

df

df.isnull().sum()

x=df.iloc[:,:-1]
y=df.iloc[:,-1]

from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split

le=LabelEncoder()
le.fit(y)
y=le.transform(y)

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=20)

x_test.shape,x_train.shape,y_test.shape,y_train.shape

"""Training Top Models"""

from sklearn.datasets import make_classification
from sklearn.svm import SVC
from sklearn.ensemble import RandomForestClassifier,GradientBoostingClassifier
from sklearn.neighbors import KNeighborsClassifier
from sklearn.naive_bayes import MultinomialNB

from sklearn.metrics import accuracy_score,confusion_matrix

#Create a Dictionary to Add all the models
models={
    'SVC':SVC(kernel='linear'),
    'RandomForestClassifier':RandomForestClassifier(n_estimators=100,random_state=42),
    'GradientBoostingClassifier':GradientBoostingClassifier(n_estimators=100,random_state=42),
    'KNeighborsClassifier':KNeighborsClassifier(n_neighbors=5),
    'MultinomialNB':MultinomialNB()
}
for model_name,model in models.items():
  model.fit(x_train,y_train)
  #test model
  predictions=model.predict(x_test)
  #calculate accuracy
  accuracy=accuracy_score(y_test,predictions)
  cn=confusion_matrix(y_test,predictions)
  print(f"{model_name} Accuracy: {accuracy}")
  print(confusion_matrix)

"""Single Prediction"""

svc=SVC(kernel='linear')
svc.fit(x_train,y_train)
ypred=svc.predict(x_test)

accuracy_score(y_test,ypred)

"""Download model"""

import pickle
pickle.dump(svc,open('svc.pkl','wb'))

